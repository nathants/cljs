#!/bin/bash
set -euo pipefail

filepath=$1
shift
root=$(cljs-root $filepath)

build() {
    echo :root $root/ >&2
    if ! cljs-auto-status $filepath 2>/dev/null && [ ! -z "${clean:-}" ]; then
        echo :cleaned >&2
        rm -rf "$root"
    fi
    if [ ! -z "${auto:-}" ]; then
        cljs-auto-start $filepath
    fi
    source_hash=$(cljs-hash $filepath)
    compiled_hash=$(cat $root/hash 2>/dev/null || echo '')
    if [ ! -z "${usecached:-}" ] || [ "$source_hash" == "$compiled_hash" ]; then
        echo :cached >&2
    elif cljs-auto-status $filepath 2>/dev/null; then
        echo :cljs-auto >&2
        cljs-auto-wait "$filepath"
    else
        echo :cljs-once >&2
        cljs-once $filepath
    fi
    echo :stdout >&2
    mv $root/out/dev.js $root/out/dev.js.tmp
    cat $root/out/dev.js.tmp | sed -r "s:path\.resolve\([^\)]+\):'$root':" > $root/out/dev.js
    rm $root/out/dev.js.tmp
}

browser-mode() {
    build
    cd $root
    ln -sf index.html.dev index.html
    python3 -m http.server
}

server-mode() {
    if ls $root/release.js &>/dev/null; then
        node $root/release.js "$@"
    else
        build
        node $root/dev.js "$@"
    fi
}

if cljs-deps $filepath :browser-mode; then
    browser-mode
else
    server-mode "$@"
fi
